name: CI

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name'
        required: true
      release_tag:
        description: 'Release tag'
        required: true

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        configuration: [Release, Debug]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
      
    - name: Restore dependencies
      run: dotnet restore src/ImGui.NET

    - name: Build
      run: dotnet build --no-restore src/ImGui.NET --configuration ${{ matrix.configuration }} --framework 'net6.0'
      
    - name: List Packages
      run: ls -l bin\${{ matrix.configuration }}\ImGui.NET\net6.0\

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-build-${{ matrix.configuration }}
        path: bin\${{ matrix.configuration }}\ImGui.NET\net6.0\

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        release_name: ${{ github.event.inputs.release_name }}
        draft: false
        prerelease: false

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: windows-latest-build-Release
        path: ./windows-release

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: windows-latest-build-Debug
        path: ./windows-debug

    - name: Zip Release Artifact
      run: |
        zip windows-release.zip ./windows-release

    - name: Zip Release Artifact
      run: |
        zip windows-debug.zip ./windows-debug

    - name: List Artifacts Release
      run: ls -l ./windows-release

    - name: List Artifacts Debug
      run: ls -l ./windows-debug

    - name: ls
      run: ls -l ./

    - name: Upload Windows Release build artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-release.zip
        asset_name: windows-release
        asset_content_type: application/zip

    - name: Upload Windows Debug build artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-debug.zip
        asset_name: windows-debug
        asset_content_type: application/zip
